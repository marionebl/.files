set nocompatible " be iMproved, required
set encoding=utf-8 " set encoding
set exrc " read project specific vimrc files
filetype off " required

" set the runtime path to include Vundle and initialize
set runtimepath+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
" Utilities
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'scrooloose/syntastic'
Plugin 'airblade/vim-gitgutter'
Plugin 'trusktr/seti.vim'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'ryanoasis/vim-devicons'
Plugin 'tpope/vim-fugitive'
Plugin 'bling/vim-airline'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'heavenshell/vim-jsdoc'
Plugin 'Valloric/YouCompleteMe'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-sensible'
Plugin 'rking/ag.vim'
Plugin 'taiansu/nerdtree-ag'
Plugin 'benekastah/neomake'
Plugin 'yggdroot/indentline'

" JavaScript
Plugin 'helino/vim-json'
Plugin 'pangloss/vim-javascript'
Plugin 'marijnh/tern_for_vim'

" Bundles
Bundle 'jistr/vim-nerdtree-tabs'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" start nerdtree tabs per default
autocmd VimEnter * if &filetype !=# 'gitcommit' | NERDTree | endif

" enable backspace deleting
set backspace=2

" enable syntax highlighting per default
syntax on

" enable line numbers
set number

" remap <leader> to ,
let mapleader=","

" display whitespace
set list
autocmd VimEnter * if &filetype !=# 'gitcommit' | set lcs+=tab:▸\ ,eol:¬,space:.,nbsp:.  | endif

" tabs
set tabstop=2
set fillchars+=vert:\

" configure ctrl+p to ignore files in gitignore
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

" enable icons
set guifont=Knack\ Regular\ Nerd\ Font\ 12
set laststatus=2
let g:airline_powerline_fonts = 1
let g:WebDevIconsUnicodeDecorateFolderNodes = 1

let g:neomake_open_list = 1
let g:neomake_javascript_enabled_makers = ['eslint']
let g:neomake_verbose = 1
let g:neomake_json_enabled_makers = ['jsonlint']
let g:neomake_css_checkers = ['stylelint']
let g:neomake_typescript_checkers = ['tsc']
let g:neomake_vim_checkers = ['vint']
let g:neomake_html_checkers = []

autocmd! BufWinEnter * Neomake
autocmd! BufWritePost * Neomake

hi NeomakeWarningMessage ctermfg=Yellow
hi NeomakeErrorMessage ctermfg=Red

let g:neomake_warning_sign = { 'text': '⚠', 'texthl': 'NeomakeWarningMessage' }
let g:neomake_error_sign = { 'text': '✗', 'texthl': 'NeomakeErrorMessage' }

" theming
hi CursorLine cterm=none ctermbg=DarkGrey
hi LineNr ctermfg=DarkGrey
hi CursorLineNr term=bold ctermfg=Yellow
hi NonText ctermfg=DarkGrey
hi SpecialKey ctermfg=DarkGrey
hi StatusLine ctermbg=DarkGrey ctermfg=DarkGrey
hi VertSplit ctermbg=DarkGrey ctermfg=DarkGrey
hi NERDTreeOpenable cterm=none ctermfg=Blue
hi NERDTreeClosable cterm=none ctermfg=Blue
hi SyntasticWarning ctermfg=Black
hi SyntasticStyleError ctermfg=Black
hi SyntasticStyleWarning ctermfg=Black
hi Search cterm=standout ctermbg=White ctermfg=234
hi MatchParen ctermbg=DarkGrey
hi PMenu ctermbg=DarkGrey ctermfg=LightGrey
let g:airline_theme='powerlineish'

" mappings
map <C-f> :NERDTreeFocusToggle
map <C-t> :NERDTreeTabsToggle
